for(i in 1:1000){
tmp <- cor(c(t(booted_mins_under19[i,]))[2:10],c(t(as.numeric(booted_schools[i,])))[2:10])
cor_vec_under19 <- append(cor_vec_under19, tmp)
}
quantile(cor_vec_under19, c(0.025, 0.5, 0.975))
#   2.5%       50%     97.5%
# 0.7292878 0.8187446 0.8848669
#want to look at the visits per person by age group, by region
#get the total visits per person in each region in each year for the visit frequencies
#using regiosn_weighted_allyears that is monthly visits
avg_yearly_regions_tojoin <- regions_weighted_allyears |> group_by(part, YEAR) |> summarize(vis_per_thous_peryear = sum(sum_region_cases_per_thousand))
region_totals_cont <- pop_sizes |>
left_join(regions) |>
filter(!STATE %in% c("Hawaii", "Alaska")) |>
group_by(part) |>
summarize(region_total = sum(POPSIZE))
alldat_region <- left_join(vis_year, coh) |> left_join(regions) |> left_join(pop_sizes)
age_group_breakdown_table <- alldat_region |>
filter(!STATE %in% c("Hawaii", "Alaska")) |>
left_join(region_totals_cont) |>
mutate(pop_frac = POPSIZE/region_total) |>
mutate(group_weight = pop_frac/NMEMB) |>
mutate(weighted_cases = yearly_visits*group_weight) |>
group_by(part, AGEGRP, YEAR) |>
summarize(sum_region_cases = sum(weighted_cases)) |>
mutate(sum_region_cases_per_thousand = sum_region_cases*1000) |>
left_join(avg_yearly_regions_tojoin) |>
mutate(visit_proportion = sum_region_cases_per_thousand / vis_per_thous_peryear) |>
group_by(AGEGRP, part) |>
summarize(average_vis_prop = mean(visit_proportion), sd = sd(visit_proportion))
age_group_breakdown_table_polished <- age_group_breakdown_table |>
mutate(lower = average_vis_prop - 1.96*sd/3, upper = average_vis_prop + 1.96*sd/3) |>
select(AGEGRP, part, average_vis_prop, lower, upper) |>
mutate("Average_Visit_Proportion" = paste0(round(average_vis_prop, 2), " ", "(", round(lower, 2), ",", round(upper, 2), ")" )) |>
select(AGEGRP, part, Average_Visit_Proportion)
age_breakdown_plot <- age_group_breakdown_table |> ggplot(aes(part, average_vis_prop, group = AGEGRP, fill = AGEGRP)) + geom_bar(stat = "identity") + theme_minimal() + scale_fill_manual(values = brewer.pal(n= 8, name= "Set2"), labels = c("0-4", "5-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69")) + ylab("Visit Proportion") + xlab("Region") +
labs(fill = "Age Group") + theme(legend.position = "none")
membership_byage <- left_join(total_membership_byyear_region_age, total_memb_byregion_year) |> mutate(age_freq = sum_membs / total_memb) |>
group_by(part, AGEGRP) |>
summarize(avg_age_freq = mean(age_freq), sd = sd(age_freq)) |>
mutate(lower_memb = avg_age_freq - 1.96*sd/3, upper_memb = avg_age_freq + 1.96*sd/3)
#make frequency plot of the membership
membership_freq_plot <- membership_byage |> ggplot(aes(part, avg_age_freq, fill = AGEGRP)) + geom_bar(stat = "identity") + scale_fill_manual(values = brewer.pal(n= 8, name= "Set2"), labels = c("0-4", "5-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69")) + ylab("Membership Proportion") + xlab("Region") +
labs(fill = "Age Group") + theme_minimal() + theme(legend.position = "none")
#Make into a table format to join with frequency data from visits
membership_table <- membership_byage |> mutate("Average_Membership_Proportion" = paste0(round(avg_age_freq, 2), " ", "(", round(lower_memb, 2), ",", round(upper_memb, 2), ")" )) |> select(part, AGEGRP, Average_Membership_Proportion)
age_month_plot <- ggplot() +
geom_point(aes(MONTH, sum_weighted_vis_per_thous, group = AGEGRP, color = AGEGRP), data = weighted_age_groups_yearly, size = 0.3) +
geom_line(aes(MONTH, avg_vis_per_thous, group = AGEGRP, color = AGEGRP), data = weighted_age_groups_permonth) +
geom_ribbon(aes(MONTH, ymin = avg_vis_per_thous - 1.96*sd/3, ymax = avg_vis_per_thous + 1.96*sd/3, fill = AGEGRP), alpha = 0.3, data = weighted_age_groups_permonth) + scale_fill_manual(name = "Age Group", values = brewer.pal(n= 8, name= "Set2"), labels = c("0-4", "5-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69")) + scale_color_manual(name = "Age Group", values = brewer.pal(n= 8, name= "Set2"), labels = c("0-4", "5-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69")) + scale_x_discrete(limits = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEPT","OCT", "NOV", "DEC")) + xlab("Month") + ylab("Visits per 1000 People") +
theme_minimal()  + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#create table with age groups by region and their membership and visit proportions
memb_vis_prop_table <- left_join(age_group_breakdown_table_polished,membership_table)
#calculate the avg visits in each region in those under 19
age_group_breakdown_table |> filter(AGEGRP %in% c("00_04", "05_09", "10_19")) |> group_by(part) |>
summarize(under_19_vis_prop = sum(average_vis_prop))
membership_byage |> filter(AGEGRP %in% c("00_04", "05_09", "10_19")) |> group_by(part) |>
summarize(under_19_memb_prop = sum(avg_age_freq))
#age standardization to show that the age distribution of the population in each region is not different enough to explain the differences
midwest_ageprops <- left_join(total_membership_byyear_region_age, total_memb_byregion_year) |> mutate(age_freq = sum_membs / total_memb) |> filter(part == "Midwest") |> ungroup() |> select(AGEGRP, YEAR, age_freq, -part)
#need to calculate visit rates by age group and by region, which I think I have in the age analysis file
#using the denominator
alldat_region |>
filter(!STATE %in% c("Hawaii", "Alaska")) |>
left_join(region_totals_cont) |>
mutate(pop_frac = POPSIZE/region_total) |>
mutate(group_weight = pop_frac/NMEMB) |>
mutate(weighted_cases = yearly_visits*group_weight) |>
group_by(part, AGEGRP, YEAR) |>
summarize(sum_region_cases = sum(weighted_cases)) |>
mutate(sum_region_cases_per_thousand = sum_region_cases*1000)
#do this without weighting to make sure the numbers look the same
memb_denom <- coh |> filter(!STATE %in% c("Hawaii", "Alaska")) |> left_join(regions)|> group_by(AGEGRP, YEAR, part) |> summarize(sum_memb = sum(NMEMB))
dat |> filter(!STATE %in% c("Hawaii", "Alaska")) |> left_join(regions) |> group_by(AGEGRP, YEAR, part) |> summarize(sum_vis = sum(NVISITS)) |> left_join(memb_denom) |>
mutate(vis_per_thous = sum_vis / sum_memb * 1000) |>
left_join(midwest_ageprops) |> mutate(vis_per_thous_props = vis_per_thous *age_freq) |>
group_by(YEAR, part) |> summarize(sum_vis_per_thous = sum(vis_per_thous_props)) |>
group_by(part) |> summarize(avg_vis_per_thous = mean(sum_vis_per_thous)) #compare this with the non-age-standardized version
coh_denom <- coh |> filter(!STATE %in% c("Hawaii", "Alaska")) |> left_join(regions) |> group_by(YEAR, part) |> summarize(sum_memb = sum(NMEMB))
dat |> filter(!STATE %in% c("Hawaii", "Alaska")) |> left_join(regions) |> group_by(YEAR, part) |> summarize(sum_vis = sum(NVISITS)) |>
left_join(coh_denom) |> mutate(vis_per_thous = sum_vis / sum_memb* 1000) |> group_by(part) |> summarize(avg_vis_per_thous = mean(vis_per_thous))
#try getting the rates for the individual regions and age groups first without weighting, then with to check
region_year_agegrp_rates_unweighted <- dat |> filter(!STATE %in% c("Hawaii", "Alaska")) |> left_join(regions) |> group_by(AGEGRP, YEAR, part) |> summarize(sum_vis = sum(NVISITS)) |> left_join(memb_denom) |>
mutate(vis_per_thous = sum_vis / sum_memb * 1000)
#trying with weighting; need region totals per age group for weighting
region_agegrp_totals <- pop_sizes |> left_join(regions) |> group_by(AGEGRP, part) |> summarize(total_pop = sum(POPSIZE))
mw_stan_weighted_regionvis <- alldat_region |> left_join(region_agegrp_totals) |>
mutate(pop_frac = POPSIZE / total_pop) |>
mutate(group_weight = pop_frac / NMEMB) |>
mutate(weighted_vis = yearly_visits * group_weight) |>
group_by(part, AGEGRP, YEAR) |>
summarize(sum_region_vis_per_thous = sum(weighted_vis)*1000) |> #this looks right so far so then I need to multiply those by the membership proportion in the midwest
left_join(midwest_ageprops) |>
mutate(vis_per_thous_freqs = sum_region_vis_per_thous*age_freq) |>
group_by(part, YEAR) |>
summarize(vis_per_thous = sum(vis_per_thous_freqs)) |>
group_by(part) |>
summarize(avg_vis_per_thous = mean(vis_per_thous), sd = sd(vis_per_thous)) #ok this looks right
#standardized visits from all years:
mw_stan_vis_allyears <- alldat_region |> left_join(region_agegrp_totals) |>
mutate(pop_frac = POPSIZE / total_pop) |>
mutate(group_weight = pop_frac / NMEMB) |>
mutate(weighted_vis = yearly_visits * group_weight) |>
group_by(part, AGEGRP, YEAR) |>
summarize(sum_region_vis_per_thous = sum(weighted_vis)*1000) |> #this looks right so far so then I need to multiply those by the membership proportion in the midwest
left_join(midwest_ageprops) |>
mutate(vis_per_thous_freqs = sum_region_vis_per_thous*age_freq) |>
group_by(part, YEAR) |>
summarize(vis_per_thous = sum(vis_per_thous_freqs)) |>
mutate(Region = part)
##remake panels b&c of figure S3 but now with the age standardized values.##
avg_yearly_regions_stan <- mw_stan_weighted_regionvis |>
mutate(lower = avg_vis_per_thous - 1.96*sd/sqrt(9), upper = avg_vis_per_thous + 1.96*sd/sqrt(9)) |>
mutate(Region = factor(part, levels = c("South", "Midwest", "Northeast", "West"))) |>
arrange(Region)
region_table_stan <- avg_yearly_regions_stan |>
mutate("95%CI" = paste0("(", round(lower,2), "-", round(upper,2), ")")) |>
select(Region, avg_vis_per_thous, `95%CI`)
#write this to a file at the bottom
year_averages_plot_stan <- avg_yearly_regions_stan |>
ggplot(aes(Region, avg_vis_per_thous, color = Region)) +
geom_point() +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_color_manual(values= colors_df$region_color, labels = colors_df$Region) +
ylab("Visits per 1000") +
# ggtitle("Streptococcal Pharyngitis Average Visits by Region") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=0.5))
#make dataframe and perform each t-test
ttest_table_reg_stan <- expand_grid(region1 = c("South", "Midwest", "Northeast", "West"),
region2 = c("South", "Midwest", "Northeast", "West")) |>
filter(region1 != region2) |>
mutate(Comparison = paste0(region1, "-", region2)) |>
filter(!Comparison %in% c("Midwest-South", "Northeast-South", "Northeast-Midwest",
"West-South", "West-Midwest", "West-Northeast"))
ttest_table_reg_stan <- fill_table_stan(ttest_table_reg_stan, mw_stan_vis_allyears, avg_yearly_regions_stan)
region_comparisons_stan <- ttest_table_reg_stan |>
ggplot(aes(x = -log(pvals), y = diff, shape = Comparison)) +
geom_point() +
geom_vline(xintercept = -log(0.05/6), linetype = 2, color = "red") +
xlab("Negative Log P-value") +
ylab("Difference in Visits per 1000") +
# ggtitle("Streptococcal Pharyngitis Average Yearly Region Comparisons") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, size = 18))
#school start correlation at the state label
#can see if I really need to pull this in or can summarize from ss_dat_trim
start_date_summary_state <- read_csv("../output/school_starts_summary_state.csv")
state_weighted_vis_allyears_cont <- state_weighted_vis_allyears |> filter(!STATE %in% c('Hawaii', 'Alaska')) |> group_by(STATE, MONTH, YEAR) |> select(-part) |> left_join(subregions)
#now do uptick points for each state
state_month_mins <- expand_grid(YEAR = c(2010:2018), STATE = unique(state_weighted_vis_allyears_cont$STATE), min = NA)
#this takes a long time, save the output and reload it in
# for(i in 1:nrow(state_month_mins)){
#   df <- state_weighted_vis_allyears_cont |>
#     filter(YEAR == state_month_mins[i,1], STATE == state_month_mins[i,2])
#   state_month_mins[i,3] <- df[which(df$weighted_cases_per_thousand == min(df$weighted_cases_per_thousand)), 2]
# }
#saveRDS(state_month_mins, "/Users/madeleinekline/Dropbox (Harvard University)/GradLab/Strep_project/8_25_analysis/state_month_mins.RDS")
state_month_mins <- readRDS("/Users/madeleinekline/Dropbox (Harvard University)/GradLab/Strep_project/8_25_analysis/state_month_mins.RDS")
range(state_month_mins$min) #this has a wider range, from 5-11
avg_state_mins <- state_month_mins |>
group_by(STATE) |>
summarize(avg_min_month = mean(min), sd_min = sd(min)) |>
arrange(avg_min_month) |>
mutate(lower_min = avg_min_month - 1.96*sd_min/3, upper_min =  avg_min_month + 1.96*sd_min/3)
#Plot these now on a plot of the averages per state
state_weighted_vis_avg <- state_weighted_vis_allyears_cont |>
group_by(STATE, MONTH, part) |>
summarize(avg_vis_per_thousand = mean(weighted_cases_per_thousand), sd = sd(weighted_cases_per_thousand)) |>
mutate(lower = avg_vis_per_thousand - 1.96*sd/3, upper = avg_vis_per_thousand + 1.96*sd/3) |>
left_join(avg_state_mins)
state_uptick_plot <- state_weighted_vis_avg |>
mutate(Region = factor(part, subcolors_df$Region)) |>
ggplot(aes(x = MONTH, y = avg_vis_per_thousand)) + geom_line(aes(color = Region)) +
geom_ribbon(aes(x = MONTH, ymin =lower, ymax = upper, fill = Region), alpha = 0.2) +
theme_minimal() + scale_color_manual(values = subcolors_df$region_color) + geom_vline(aes(xintercept = avg_min_month), color = 'black', linetype = 2, alpha = 0.5) +
scale_fill_manual(values = subcolors_df$region_color) +
facet_wrap(~STATE) +
ylab("Average Visits per 1000") +
xlab("Month") +
scale_x_discrete(limits = c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEPT","OCT", "NOV", "DEC")) +
theme(axis.text.x = element_blank())
#now get state-level school start data
state_month_mins_date <- avg_state_mins |> mutate(Uptick_Date = date(duration(month = avg_min_month-1))-1, uptick_lower_date = date(duration(month = lower_min-1))-1,
uptick_upper_date =date(duration(month = upper_min-1))-1) |>
select(STATE, Uptick_Date, uptick_lower_date, uptick_upper_date)
year(state_month_mins_date$Uptick_Date) <- 2019
year(state_month_mins_date$uptick_lower_date) <- 2019
year(state_month_mins_date$uptick_upper_date) <- 2019
state_name_to_abb <- data.frame(STATE = state.name, State = state.abb)
state_month_mins_date <- left_join(state_month_mins_date, state_name_to_abb)
state_month_mins_date$State[44] <- "DC"
combined_dates <- left_join(state_month_mins_date, start_date_summary_state) |> select(STATE, State, Uptick_Date, uptick_lower_date,
uptick_upper_date, Date, lower_date, upper_date) |> left_join(subregions)
#correlation:
cor(as.numeric(combined_dates$Uptick_Date), as.numeric(combined_dates$Date)) #correlation raw is ~0.84
total_comb <- combined_dates |> mutate(Region = part) |> left_join(subcolors_df) |>
mutate(part = factor(part, levels =  c("East South Central", "West South Central",
"West North Central", "South Atlantic", "Middle Atlantic",
"Mountain West", "East North Central", "New England", "Pacific West")))
#plot the correlation
state_correlation_plot <- total_comb |> ggplot(aes(x = Date, y = Uptick_Date, color = part)) + geom_point() +
theme_minimal() + geom_smooth(method = 'lm', color = 'black', linewidth = 0.3,linetype = 2, alpha = 0.2) +
xlab("School Start Date") + ylab("Minimum Visit Date") + labs(color = "Subregion") +
scale_color_manual(values = subcolors_df$region_color)
#Now bootstrap the uptick dates
booted_uptick_state <- data.frame(samp = 1:1000)
for(i in 1:length(unique(state_month_mins_date$STATE))){
vec_to_add <- c()
for(z in 1:1000){
tmp <- state_month_mins_date |> filter(STATE == unique(state_month_mins_date$STATE)[i]) |> pull(Uptick_Date) |>
sample(size = 9, replace = TRUE) |> mean()
vec_to_add <- append(vec_to_add, tmp)
}
booted_uptick_state <- cbind(booted_uptick_state, vec_to_add)
}
colnames(booted_uptick_state) <- unique(state_month_mins_date$STATE)
#do the same thing with schools
#calculate counties per state
counties_per_state <- ss_dat_trim |> group_by(State) |> summarize(num_counties = n()) |>
mutate(State = factor(State, state_month_mins_date$State)) |> arrange(State)
booted_schools_state <- data.frame(samp = 1:1000)
for(i in 1:length(unique(state_month_mins_date$State))){
vec_to_add <- c()
for(z in 1:1000){
tmp <- ss_dat_trim |> filter(State == unique(state_month_mins_date$State)[i]) |> pull(date) |>
sample(size = as.numeric(counties_per_state[i,2]), replace = TRUE) |> mean()
vec_to_add <- append(vec_to_add, tmp)
}
booted_schools_state <- cbind(booted_schools_state, vec_to_add)
}
colnames(booted_schools_state) <- unique(state_month_mins_date$State)
corvec <- c()
for(i in 1:1000){
tmp <- cor(c(t(as.numeric(booted_schools_state[i,])))[2:50],c(t(as.numeric(booted_uptick_state[i,])))[2:50])
corvec <- append(corvec, tmp)
}
mean(corvec) #0.837, very similar
quantile(corvec, probs = c(0.025, 0.5, 0.975))
#    2.5%       50%     97.5%
# 0.8184016 0.8376598 0.8538440
#make plots of the states with error bars
uptickdate_state <- total_comb |> select(STATE, State, Uptick_Date, uptick_lower_date, uptick_upper_date, Region) |>
mutate(Date = Uptick_Date, lower_date=uptick_lower_date, upper_date= uptick_upper_date, cat = "Uptick") |>
select(STATE, State, Date, lower_date, upper_date, cat, Region)
#order them by uptick date
state_order_uptick <- uptickdate_state |> arrange(desc(Date)) |> pull(STATE)
school_state <- total_comb |> select(STATE, State, Date, lower_date, upper_date, Region) |>
mutate(cat = "School_Start") |>
select(STATE, State, Date, lower_date, upper_date, cat, Region)
comb_long <- rbind(uptickdate_state, school_state) |>
mutate(STATE = factor(STATE, levels = state_order_uptick)) |>
filter(STATE != "South Carolina") |>
arrange(desc(STATE))
state_errorbars <- comb_long |> ggplot(aes(x= Date,y = STATE, group = cat, color = cat)) + geom_point() +
geom_errorbar(aes(xmin = lower_date, xmax = upper_date)) + theme_minimal() +
ylab("State") + scale_color_manual(values = c("#66C2A5","#FC8D62"),
labels = c("School Start Date", "Minimum Visit Date")) +
labs(color = "Date")
#find mean and range of the difference
total_comb$Date - total_comb$Uptick_Date
mean(total_comb$Date - total_comb$Uptick_Date)
range(total_comb$Date - total_comb$Uptick_Date
)
#repeat correlation analysis at a subregional level but with just the under 19 and over 19 populations
comb_under19 <- rbind(start_date_summary, month_mins_date_under19) |> mutate(Subregion = factor(Subregion, levels = rev(min_uptick_order_under19)))
uptickdates_plot_under19 <- comb_under19 |> ggplot(aes(x = Date, y = Subregion, color = cat)) + geom_point() + geom_errorbar(aes(xmin = lower_date, xmax = upper_date), width = 0.2, alpha = 0.5) +
theme_minimal() + labs(color = "Date") + scale_color_manual(values = c("#FC8D62", "#66C2A5"),
labels = c("Minimum Visit Date", "School Start Date" ))
month_mins_date_over19_noagecol <- month_mins_date_over19 |> select(-age)
comb_over19 <- rbind(start_date_summary, month_mins_date_over19_noagecol) |> mutate(Subregion = factor(Subregion, levels = rev(min_uptick_order_over19)))
uptickdates_plot_over19 <- comb_over19 |> ggplot(aes(x = Date, y = Subregion, color = cat)) + geom_point() + geom_errorbar(aes(xmin = lower_date, xmax = upper_date), width = 0.2, alpha = 0.5) +
theme_minimal() + labs(color = "Date") + scale_color_manual(values = c("#FC8D62", "#66C2A5"),
labels = c("Minimum Visit Date", "School Start Date" ))
#plot the two uptick dates from under and over 19 next to one another with school start dates
month_mins_date_under19_tojoin <- month_mins_date_under19 |> mutate(group = "under19")
month_mins_date_over19_tojoin <- month_mins_date_over19_noagecol |> mutate(group = "over19")
start_date_summary_tojoin <- start_date_summary |> mutate(group = "schoolstart")
comb_ages <- rbind(month_mins_date_under19_tojoin, month_mins_date_over19_tojoin, start_date_summary_tojoin) |> mutate(Subregion = factor(Subregion , levels = rev(min_uptick_order_under19))) |> arrange(Subregion)
bothages_uptick_plot <- comb_ages |> ggplot(aes(x = Date, y = Subregion, color = group)) + geom_point() + geom_errorbar(aes(xmin = lower_date, xmax = upper_date), width = 0.2, alpha = 0.5) +
theme_minimal() + labs(color = "Date") + scale_color_manual(values = c( "#E69F00", "#009E73",  "#D55E00"),
labels = c("Over 19 Minimum Visit Date", "School Start Date", "Under 19 Minimum Visit Date"))
#calculate the differences between school start date and minimum visit date in each region
under19_dates <- comb_ages |> filter(group == "under19") |> pull(Date)
over19_dates <- comb_ages |> filter(group == "over19") |> pull(Date)
school_dates <- comb_ages |> filter(group == "schoolstart") |> pull(Date)
#under 19
range(under19_dates - school_dates) #51 and 29 days apart
mean(under19_dates - school_dates) #mean 39 days apart
#over19
range(over19_dates - school_dates) #38 and 4 days apart
mean(over19_dates - school_dates) #mean 16.44 days apart
threeages <- rbind(month_mins_date_under4, month_mins_date_fivetonineteen, month_mins_date_over19) |>
mutate(Subregion = factor(Subregion, levels = rev(min_uptick_order_fivetonineteen))) |>
arrange(Subregion)
threeagegroup_plot <- threeages |> ggplot(aes(x = Date, y = Subregion, color = age)) + geom_point() + geom_errorbar(aes(xmin = lower_date, xmax = upper_date), width = 0.2, alpha = 0.5) +
theme_minimal() + labs(color = "Date") + scale_color_manual(name = "Age Group",
values = c("#D95F02","#E6AB02","#A6761D"),
labels = c("5-19", "Over 19", "Under 4"))
#write all tables
write_csv(table1, "../output/study_population_table_table1.csv")
write_csv(region_table, "../output/Average_region_year.csv")
write_csv(region_table_stan, "../output/Average_region_year_age_standardized.csv")
write_csv(ttest_table_reg_stan, "../output/region_ttests_standardized.csv")
write_csv(ttest_table_reg, "../output/region_ttests.csv")
write_csv(subregion_table, "../output/Average_subregion_year.csv")
write_csv(region_table_month, "../output/Average_region_month.csv")
write_csv(subregion_table_month, "../output/Average_subregion_month.csv")
write_csv(region_quarters_table, "../output/region_quarters_table.csv")
write_csv(subregion_quarters_table, "../output/subregion_quarters_table.csv")
write_csv(quarter_diffs_table, "../output/quarter_diffs_region_table_S4.csv")
write_csv(wide_table_regions, "../output/continental_US_regions_table_wide.csv")
write_csv(wide_table_subregions, "../output/continental_US_subregions_table_wide.csv")
write_csv(phase_table, "../output/State_phase_table_S5.csv")
write_csv(phase_table_log, "../output/State_phase_table_log.csv")
write_csv(subregion_sinusoids_parameters, "../output/subregion_sinusoids_parameters.csv")
write_csv(region_sinusoids_parameters, "../output/region_sinusoids_parameters.csv")
write_csv(subregion_sinusoids_phase_table, "../output/subregion_phase_table.csv")
write_csv(region_sinusoids_phase_table, "../output/region_phase_table.csv")
write_csv(ttest_table_sub, "../output/subregion_comparisons_yearly_pvals.csv")
write_csv(state_month_mins_date, '../output/state_month_mins_table.csv')
write_csv(memb_vis_prop_table, '../output/agegroup_breakdown.csv')
#save all figures as pngs and pdfs
##main figures
#fig 1
ggsave("../figures/fig1.png", points_region_plot, width = 7, height =5)
ggsave("../figures/fig1.pdf", points_region_plot, width = 7, height =5)
ggsave("../figures/fig1.tiff", points_region_plot, width = 7, height =5, dpi = 300)
ggsave("../figures/fig1_hr.tiff", points_region_plot, width = 7, height =5, dpi = 1000)
ggsave("../figures/fig1.eps", points_region_plot, width = 7, height =5, dpi = 1000)
#fig 2
ggsave("../figures/fig2.png", state_phases_map_noSC, width = 7, height = 5)
ggsave("../figures/fig2.pdf", state_phases_map_noSC, width = 7, height = 5)
ggsave("../figures/fig2.tiff", state_phases_map_noSC, width = 7, height = 5, dpi = 300)
ggsave("../figures/fig2_hr.tiff", state_phases_map_noSC, width = 7, height = 5, dpi = 1000)
ggsave("../figures/fig2.eps", state_phases_map_noSC, width = 7, height = 5, dpi = 1000)
#fig 3
ggsave("../figures/fig3.png", uptickdates_plot, width =7, height =5)
ggsave("../figures/fig3.pdf", uptickdates_plot, width =7, height =5)
ggsave("../figures/fig3.tiff", uptickdates_plot, width =7, height =5, dpi = 300)
ggsave("../figures/fig3_hr.tiff", uptickdates_plot, width =7, height =5, dpi = 1000)
ggsave("../figures/fig3_hr.eps", uptickdates_plot, width =7, height =5, dpi = 1000)
##supplemental figures
#fig S1
ggsave("../figures/figS1.png", continental_state_membership_noSC, width = 6, height = 3)
ggsave("../figures/figS1.pdf", continental_state_membership_noSC, width = 6, height = 3)
#fig S2
ggsave("../figures/figS2a.pdf", membership_freq_plot, width = 5, height = 3.5)
ggsave("../figures/figS2a.png", membership_freq_plot, width = 5, height = 3.5)
ggsave("../figures/figS2b.pdf", age_breakdown_plot, width = 5, height = 3.5)
ggsave("../figures/figS2b.png", age_breakdown_plot, width = 5, height = 3.5)
ggsave("../figures/figS2c.pdf", age_month_plot, width = 5, height = 3.5)
ggsave("../figures/figS2c.png", age_month_plot, width = 5, height = 3.5)
ggsave("../figures/figS2.pdf", grid.arrange(membership_freq_plot, age_breakdown_plot, age_month_plot, layout_matrix = rbind(c(1,1,1,2,2,2),c(1,1,1,2,2,2), c(4,3,3,3,3,4),c(4,3,3,3,3,4))), width = 7, height = 6)
ggsave("../figures/figS2.png", grid.arrange(membership_freq_plot, age_breakdown_plot, age_month_plot, layout_matrix = rbind(c(1,1,1,2,2,2),c(1,1,1,2,2,2), c(4,3,3,3,3,4),c(4,3,3,3,3,4))), width = 7, height = 6)
ggsave("../figures/figS2.tiff", grid.arrange(membership_freq_plot, age_breakdown_plot, age_month_plot, layout_matrix = rbind(c(1,1,1,2,2,2),c(1,1,1,2,2,2), c(4,3,3,3,3,4),c(4,3,3,3,3,4))), width = 7, height = 6, dpi = 300)
#fig S3
ggsave("../figures/figS3a.png", region_differences_byyear, width = 5, height = 3.5)
ggsave("../figures/figS3a.pdf", region_differences_byyear, width = 5, height = 3.5)
ggsave("../figures/figS3b.png", year_averages_plot, width = 5, height = 3.5)
ggsave("../figures/figS3b.pdf", year_averages_plot, width = 5, height = 3.5)
ggsave("../figures/figS3c.png", region_comparisons, width = 5, height = 3.5)
ggsave("../figures/figS3c.pdf", region_comparisons, width = 5, height = 3.5)
ggsave("../figures/figS3.pdf", grid.arrange(region_differences_byyear_forfig, year_averages_plot, region_comparisons, layout_matrix = rbind(c(1,1,1,2,2,2),c(1,1,1,2,2,2), c(4,3,3,3,3,4),c(4,3,3,3,3,4))), width = 7, height = 6)
ggsave("../figures/figS3.png", grid.arrange(region_differences_byyear_forfig, year_averages_plot, region_comparisons, layout_matrix = rbind(c(1,1,1,2,2,2),c(1,1,1,2,2,2), c(4,3,3,3,3,4),c(4,3,3,3,3,4))), width = 7, height = 6)
ggsave("../figures/figS3.tiff", grid.arrange(region_differences_byyear_forfig, year_averages_plot, region_comparisons, layout_matrix = rbind(c(1,1,1,2,2,2),c(1,1,1,2,2,2), c(4,3,3,3,3,4),c(4,3,3,3,3,4))), width = 7, height = 6, dpi = 300)
#fig S4
ggsave("../figures/figS4a.png", subregion_differences_byyear, width = 5, height = 3.5)
ggsave("../figures/figS4a.pdf", subregion_differences_byyear, width = 5, height = 3.5)
ggsave("../figures/figS4b.png", year_averages_plot_subregions, width =5, height = 3.5)
ggsave("../figures/figS4b.pdf", year_averages_plot_subregions, width =5, height = 3.5)
ggsave("../figures/figS4.pdf", grid.arrange(subregion_differences_byyear_forfig, year_averages_plot_subregions, ncol = 2, layout_matrix = rbind(c(1,1,1,2,2,2,2))),  width = 8, height = 4)
ggsave("../figures/figS4.png", grid.arrange(subregion_differences_byyear_forfig, year_averages_plot_subregions, ncol = 2, layout_matrix = rbind(c(1,1,1,2,2,2,2))),  width = 8, height = 4)
ggsave("../figures/figS4.tiff", grid.arrange(subregion_differences_byyear_forfig, year_averages_plot_subregions, ncol = 2, layout_matrix = rbind(c(1,1,1,2,2,2,2))),  width = 8, height = 4, dpi = 300)
#fig S5
ggsave("../figures/figS5a.pdf", year_averages_plot_stan, width =5, height =3.5)
ggsave("../figures/figS5a.png", year_averages_plot_stan, width =5, height =3.5)
ggsave("../figures/figS5b.pdf", region_comparisons_stan, width =5, height =3.5)
ggsave("../figures/figS5b.png", region_comparisons_stan, width =5, height =3.5)
ggsave("../figures/figS5.pdf", grid.arrange(year_averages_plot_stan, region_comparisons_stan, ncol = 2, layout_matrix = rbind(c(1,1,1,2,2,2,2))),  width = 8, height = 4, dpi = 300)
ggsave("../figures/figS5.png", grid.arrange(year_averages_plot_stan, region_comparisons_stan, ncol = 2, layout_matrix = rbind(c(1,1,1,2,2,2,2))),  width = 8, height = 4, dpi = 300)
#fig S6
ggsave("../figures/figS6a.png", region_quarters_plot, width = 5, height = 4)
ggsave("../figures/figS6a.pdf", region_quarters_plot, width = 5, height = 4)
ggsave("../figures/figS6b.png", subregion_quarters_plot, width = 5, height = 4)
ggsave("../figures/figS6b.pdf", subregion_quarters_plot, width = 5, height = 4)
ggsave("../figures/figS6.pdf", grid.arrange(region_quarters_plot, subregion_quarters_plot), width = 7, height = 10)
ggsave("../figures/figS6.png", grid.arrange(region_quarters_plot, subregion_quarters_plot), width = 7, height = 10)
ggsave("../figures/figS6.tiff", grid.arrange(region_quarters_plot, subregion_quarters_plot), width = 7, height = 10, dpi = 300)
#fig S7
ggsave("../figures/figS7.png", points_subregion_plot, width = 7, height = 5)
ggsave("../figures/figS7.pdf", points_subregion_plot, width = 7, height = 5)
ggsave("../figures/figS7.tiff", points_subregion_plot, width = 7, height = 5, dpi = 300)
#fig S8
ggsave("../figures/figS8a.png", region_heatmap_significance_noredund, width = 5, height = 3.5)
ggsave("../figures/figS8a.pdf", region_heatmap_significance_noredund, width = 5, height = 3.5)
ggsave("../figures/figS8b.png", subregion_heatmap_significance_noredund, width = 6.5, height = 6.5)
ggsave("../figures/figS8b.pdf", subregion_heatmap_significance_noredund, width = 6.5, height = 6.5)
ggsave("../figures/figS8.pdf", grid.arrange(region_heatmap_significance_noredund, subregion_heatmap_significance_noredund), width = 7, height = 11)
ggsave("../figures/figS8.png", grid.arrange(region_heatmap_significance_noredund, subregion_heatmap_significance_noredund), width = 7, height = 11)
ggsave("../figures/figS8.tiff", grid.arrange(region_heatmap_significance_noredund, subregion_heatmap_significance_noredund), width = 7, height = 11, dpi = 300)
#fig s9
ggsave("../figures/figS9a.pdf", under_19_monthly_vis_plot, width = 7, height = 5)
ggsave("../figures/figS9a.png", under_19_monthly_vis_plot, width = 7, height = 5)
ggsave("../figures/figS9b.pdf", over_19_monthly_vis_plot, width = 7, height = 5) #over_19_monthly_vis_plot in age_analyses.R
ggsave("../figures/figS9b.png", over_19_monthly_vis_plot, width = 7, height = 5)
under_19_monthly_vis_plot_nolegend <- under_19_monthly_vis_plot + theme(legend.position = "none")
ggsave("../figures/figS9.pdf",
grid.arrange(under_19_monthly_vis_plot_nolegend, over_19_monthly_vis_plot, ncol =2, layout_matrix =rbind(c(1,1,1,1,2,2,2,2,2,2))), width =8, height = 4) #under_19_monthly_vis_plot in age_analysis.R
ggsave("../figures/figS9.png",
grid.arrange(under_19_monthly_vis_plot_nolegend, over_19_monthly_vis_plot, ncol =2, layout_matrix =rbind(c(1,1,1,1,2,2,2,2,2,2))), width =8, height = 4)
ggsave("../figures/figS9.tiff",
grid.arrange(under_19_monthly_vis_plot_nolegend, over_19_monthly_vis_plot, ncol =2, layout_matrix =rbind(c(1,1,1,1,2,2,2,2,2,2))), width =8, height = 4, dpi = 300)
#fig S10
ggsave("../figures/figS10.pdf", state_sinusoids_subregions +theme(axis.text.x = element_blank()), width =8.5, height =6)
ggsave("../figures/figS10.png", state_sinusoids_subregions  + theme(axis.text.x = element_blank()), width =8.5, height =6)
ggsave("../figures/figS10.tiff", state_sinusoids_subregions  + theme(axis.text.x = element_blank()), width =8.5, height =6, dpi = 300)
#fig S11
ggsave("../figures/figS11a.png", subregion_sinusoids_CIs_plot_points, width = 7, height = 5)
ggsave("../figures/figS11a.pdf", subregion_sinusoids_CIs_plot_points, width = 7, height = 5)
ggsave("../figures/figS11b.png",subregion_phase_plot, width = 7, height = 5)
ggsave("../figures/figS11b.pdf",subregion_phase_plot, width = 7, height = 5)
ggsave("../figures/figS11.pdf", grid.arrange(subregion_sinusoids_CIs_plot_points, subregion_phase_plot), width = 7, height = 9)
ggsave("../figures/figS11.png", grid.arrange(subregion_sinusoids_CIs_plot_points, subregion_phase_plot), width = 7, height = 9)
ggsave("../figures/figS11.tiff", grid.arrange(subregion_sinusoids_CIs_plot_points, subregion_phase_plot), width = 7, height = 9, dpi = 300)
#fig S12
ggsave("../figures/figS12a.png", region_sinusoids_CIs_plot_points, width = 7, height = 5)
ggsave("../figures/figS12a.pdf", region_sinusoids_CIs_plot_points, width = 7, height = 5)
ggsave("../figures/figS12b.png", region_phase_plot, width = 7, height = 5)
ggsave("../figures/figS12b.pdf", region_phase_plot, width = 7, height = 5)
ggsave("../figures/figS12.pdf", grid.arrange(region_sinusoids_CIs_plot_points, region_phase_plot), width = 7, height = 9)
ggsave("../figures/figS12.png", grid.arrange(region_sinusoids_CIs_plot_points, region_phase_plot), width = 7, height = 9)
ggsave("../figures/figS12.tiff", grid.arrange(region_sinusoids_CIs_plot_points, region_phase_plot), width = 7, height = 9, dpi = 300)
#fig S13
ggsave("../figures/figS13a.png", subregion_centroids_plot, width = 9, height = 6.5)
ggsave("../figures/figS13a.pdf", subregion_centroids_plot, width = 9, height = 6.5)
ggsave("../figures/figS13b.png", subregion_phase_dist_correlation, width = 9, height = 6.5)
ggsave("../figures/figS13b.pdf", subregion_phase_dist_correlation, width = 9, height = 6.5)
ggsave("../figures/figS13.png", grid.arrange(subregion_centroids_plot, subregion_phase_dist_correlation_forfig, ncol = 1), width = 7.5, height = 9)
ggsave("../figures/figS13.pdf", grid.arrange(subregion_centroids_plot, subregion_phase_dist_correlation_forfig, ncol = 1), width = 7.5, height = 9)
ggsave("../figures/figS13.tiff", grid.arrange(subregion_centroids_plot, subregion_phase_dist_correlation_forfig, ncol = 1), width = 7.5, height = 9, dpi = 300)
#fig S14
#state level distance plots
ggsave("../figures/figS14a.pdf", state_centroid_map, width =9, height = 6.5)
ggsave("../figures/figS14a.png", state_centroid_map, width =9, height = 6.5)
ggsave("../figures/figS14b.pdf", state_distance_correlation_plot, width = 9, height = 6.5)
ggsave("../figures/figS14b.png", state_distance_correlation_plot, width = 9, height = 6.5)
ggsave("../figures/figS14.pdf", grid.arrange(state_centroid_map, state_distance_correlation_plot), width = 7.5, height = 9)
ggsave("../figures/figS14.png", grid.arrange(state_centroid_map, state_distance_correlation_plot), width = 7.5, height = 9)
ggsave("../figures/figS14.tiff", grid.arrange(state_centroid_map, state_distance_correlation_plot), width = 7.5, height = 9, dpi = 300)
#fig S15
ggsave("../figures/figS15a.png", subregion_uptick_plot, width =7, height =5)
ggsave("../figures/figS15a.pdf", subregion_uptick_plot, width =7, height =5)
ggsave("../figures/figS15b.png", corrplot_schoolstart, width =7, height =5)
ggsave("../figures/figS15b.pdf", corrplot_schoolstart, width =7, height =5)
ggsave("../figures/figS15_unedited.pdf", grid.arrange(subregion_uptick_plot, corrplot_schoolstart, ncol = 1), width = 7, height = 9)
ggsave("../figures/figS15_unedited.tiff", grid.arrange(subregion_uptick_plot, corrplot_schoolstart, ncol = 1), width = 7, height = 9, dpi = 300)
#fig S16
ggsave("../figures/figS16.png", state_uptick_plot, width = 8.5, height = 6)
ggsave("../figures/figS16.pdf", state_uptick_plot, width = 8.5, height = 6)
ggsave("../figures/figS16.tiff", state_uptick_plot, width = 8.5, height = 6, dpi = 300)
#fig S17
ggsave("../figures/figS17a.pdf", state_correlation_plot, width = 7, height = 5)
ggsave("../figures/figS17a.png", state_correlation_plot, width = 7, height = 5)
ggsave("../figures/figS17b.pdf", state_errorbars, width = 7, height = 5)
ggsave("../figures/figS17b.png", state_errorbars, width = 7, height = 5)
ggsave("../figures/figS17.pdf", grid.arrange(state_correlation_plot, state_errorbars, ncol = 1), width = 7, height = 10)
ggsave("../figures/figS17.png", grid.arrange(state_correlation_plot, state_errorbars, ncol = 1), width = 7, height = 10)
ggsave("../figures/figS17.tiff", grid.arrange(state_correlation_plot, state_errorbars, ncol = 1), width = 7, height = 10, dpi = 300)
#fig S18
ggsave("../figures/figS18.pdf",threeagegroup_plot, width = 7, height = 5)
ggsave("../figures/figS18.png",threeagegroup_plot, width = 7, height = 5)
ggsave("../figures/figS18.tiff",threeagegroup_plot, width = 7, height = 5, dpi = 300)
#figS19
ggsave("../figures/figS19.pdf",residuals_plot_notlogged,
width = 8.5, height = 6)
ggsave("../figures/figS19.png",residuals_plot_notlogged,
width = 8.5, height = 6)
ggsave("../figures/figS19.tiff",residuals_plot_notlogged,
width = 8.5, height = 6, dpi = 300)
#figS20 below (base R plot)
#figS21
ggsave("../figures/figS21.pdf", state_sinusoids_subregions_log +theme(axis.text.x = element_blank()), width =8.5, height =6)
ggsave("../figures/figS21.png", state_sinusoids_subregions_log  + theme(axis.text.x = element_blank()), width =8.5, height =6)
ggsave("../figures/figS21.tiff", state_sinusoids_subregions_log  + theme(axis.text.x = element_blank()), width =8.5, height =6, dpi = 300)
#these next 2 plots are in the get_state_sinusoids.R file
#figS22
ggsave("../figures/figS22.pdf", qqplot_sinusoids, width =8.5, height =6)
ggsave("../figures/figS22.png", qqplot_sinusoids, width =8.5, height =6)
ggsave("../figures/figS22.tiff", qqplot_sinusoids, width =8.5, height =6, dpi = 300)
#figS23
ggsave("../figures/figS23.pdf", qqplot_sinusoids_log, width =8.5, height =6)
ggsave("../figures/figS23.png", qqplot_sinusoids_log, width =8.5, height =6)
ggsave("../figures/figS23.tiff", qqplot_sinusoids_log, width =8.5, height =6, dpi = 300)
#figS24
ggsave("../figures/figS24.pdf", state_phase_map_noSC_log, width =7, height =5)
ggsave("../figures/figS24.png", state_phase_map_noSC_log, width =7, height =5)
ggsave("../figures/figS24.tiff", state_phase_map_noSC_log, width =7, height =5, dpi = 300)
source('../code/make_gif.R')
getwd()
source('../code/make_gif.R')
pdf("../figures/figS20.pdf", width = 15, height = 10)
par(mfrow =c(7,7))
par(mar = c(2.5,2.5,2.5,2.5), ps = 9, cex = 0.9)
state_sinusoids_f <- state_sinusoids |> filter(!STATE %in% c("Hawaii", "Alaska", "South Carolina"))
for(i in 1:length(unique(state_sinusoids_f$STATE))){
state = unique(state_sinusoids_f$STATE)[i]
state_sinusoids_f |> filter(STATE == state) |> mutate(resid = mean_weighted_cases_per_thousand - prediction) |>
pull(resid) |>
acf(main = state)
}
dev.off()
